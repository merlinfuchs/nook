// Code generated by tygo. DO NOT EDIT.
/* eslint @typescript-eslint/no-unused-vars: 0 */
/* eslint @typescript-eslint/no-unnecessary-type-constraint: 0 */

//////////
// source: config.go

export type ConfigSchema = any /* jsonschema.Schema */;
export interface ConfigUISchema {
  'ui:widget'?: ConfigUIWidget;
  'ui:channel_types'?: number /* discord.ChannelType */[];
  'ui:select_values'?: ConfigUISelectValue[];
  'ui:allow_multiple'?: boolean;
  properties?: { [key: string]: ConfigUISchema};
  items?: ConfigUISchema;
  layout?: ConfigLayout;
}
export type ConfigUIWidget = string;
export const ConfigUIWidgetSelect: ConfigUIWidget = "select";
export const ConfigUIWidgetChannelSelect: ConfigUIWidget = "channel_select";
export const ConfigUIWidgetRoleSelect: ConfigUIWidget = "role_select";
export const ConfigUIWidgetMessage: ConfigUIWidget = "message";
export const ConfigUIWidgetMessageFormat: ConfigUIWidget = "message_format";
export const ConfigUIWidgetDurationSeconds: ConfigUIWidget = "duration_seconds";
export const ConfigUIWidgetDurationMinutes: ConfigUIWidget = "duration_minutes";
export const ConfigUIWidgetDurationHours: ConfigUIWidget = "duration_hours";
export const ConfigUIWidgetDurationDays: ConfigUIWidget = "duration_days";
export interface ConfigUISelectValue {
  value: string;
  label: string;
}
export type ConfigLayoutType = string;
export const ConfigLayoutTypeContainer: ConfigLayoutType = "container";
export const ConfigLayoutTypeFlexWrap: ConfigLayoutType = "flex_wrap";
export const ConfigLayoutTypeRow: ConfigLayoutType = "row";
export interface ConfigLayout {
  type: ConfigLayoutType;
  header?: string;
  items: string[];
  children: ConfigLayout[];
}

//////////
// source: formatter.go

export type MessageIcon = string;
export const MessageIconError: MessageIcon = "error";
export const MessageIconSuccess: MessageIcon = "success";
export const MessageIconInfo: MessageIcon = "info";
export const MessageIconWarning: MessageIcon = "warning";
export const MessageIconQuestion: MessageIcon = "question";
export interface MessageBuilder<C extends any> {
}
export interface SerializedMessageFormat {
  title?: string;
  description?: string;
  url?: string;
  icon?: MessageIcon;
  fields?: SerializedMessageFormatField[];
  timestamp?: string /* RFC3339 */;
  thumbnail?: string;
}
export interface SerializedMessageFormatField {
  name?: string;
  value?: string;
  inline?: boolean;
}

//////////
// source: module.go

export type GenericModule = any;
export type GenericModuleWithCommands = 
    GenericModule;
export type GenericModuleWithEndpoints = 
    GenericModule;
export type Module<C extends any> = 
    GenericModule;
export interface ModuleMetadata {
  name: string;
  description: string;
  icon: string;
  internal: boolean;
  default_enabled: boolean;
  default_config?: any;
  config_schema?: any /* jsonschema.Schema */;
  config_ui_schema?: ConfigUISchema;
}
